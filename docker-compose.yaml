version: '3.9'
# If using colima as docker runtime on osx, then set WORKDIR so volume mounts work.
# WORKDIR=`pwd` docker-compose up
services:
  postgres:
    build:
      context: .
      dockerfile: pg.Dockerfile
    volumes:
      - ./sql_scripts:/docker-entrypoint-initdb.d/
      - ${PWD}/postgres-data/:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-crowd}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-crowd}
      - POSTGRES_DB=${POSTGRES_DB:-crowd}
    ports:
     - 5001:5432
  cube_api:
    image: cubejs/cube:latest
    ports:
      - 4000:4000
    environment:
      - CUBEJS_SCHEMA_PATH=model
      - CUBEJS_LOG_LEVEL=info
      - DEBUG_LOG=true
      - CUBEJS_DB_HOST=postgres
      - CUBEJS_DB_USER=${POSTGRES_USER:-crowd}
      - CUBEJS_DB_NAME=${POSTGRES_DB:-crowd}
      - CUBEJS_DB_PASS=${POSTGRES_PASSWORD:-crowd}
      - CUBEJS_DB_PORT=5432
      - CUBEJS_API_SECRET=secret1234
      - CUBEJS_DB_TYPE=postgres
      # - CUBEJS_EXTERNAL_DEFAULT=true
      - CUBEJS_SCHEDULED_REFRESH_DEFAULT=true
      - CUBEJS_DEV_MODE=true
      - CUBEJS_PG_SQL_PORT=5432
      - CUBEJS_SQL_USER=myusername
      - CUBEJS_SQL_PASSWORD=mypassword
      - CUBEJS_DEFAULT_API_SCOPES=meta,data,graphql,jobs
      - CUBEJS_DATASOURCES=default,redshiftlfx
      - CUBEJS_DS_REDSHIFTLFX_DB_HOST=${CUBEJS_DS_REDSHIFTLFX_DB_HOST:-empty}
      - CUBEJS_DS_REDSHIFTLFX_DB_PORT=${CUBEJS_DS_REDSHIFTLFX_DB_PORT:-empty}
      - CUBEJS_DS_REDSHIFTLFX_DB_NAME=${CUBEJS_DS_REDSHIFTLFX_DB_NAME:-empty}
      - CUBEJS_DS_REDSHIFTLFX_DB_USER=${CUBEJS_DS_REDSHIFTLFX_DB_USER:-empty}
      - CUBEJS_DS_REDSHIFTLFX_DB_PASS=${CUBEJS_DS_REDSHIFTLFX_DB_PASS:-empty}
      - CUBEJS_DS_REDSHIFTLFX_DB_TYPE=${CUBEJS_DS_REDSHIFTLFX_DB_TYPE:-empty}
    volumes:
      - ${PWD}:/cube/conf
      # - ${PWD}/model:/cube/model
    depends_on:
      - postgres